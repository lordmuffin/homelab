apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: headscale
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: networking
  source:
    repoURL: https://charts.gabe565.com
    chart: headscale
    targetRevision: v0.12.7
    helm:
      releaseName: headscale
      values: |
        #
        # IMPORTANT NOTE
        #
        # This chart inherits from our common library chart. You can check the default values/options here:
        # https://github.com/bjw-s/helm-charts/blob/a081de5/charts/library/common/values.yaml
        #

        image:
          # -- image repository
          repository: ghcr.io/juanfont/headscale
          # -- image pull policy
          pullPolicy: IfNotPresent
          # -- image tag
          tag: 0.22.3

        # -- Environment variables. [[ref]](https://github.com/juanfont/headscale/blob/main/config-example.yaml)
        # @default -- See [values.yaml](./values.yaml)
        env:
          # -- Defines the base domain to create the hostnames for MagicDNS.
          # `base_domain` must be a FQDNs, without the trailing dot.
          # The FQDN of the hosts will be
          # `hostname.user.base_domain` (e.g., _myhost.myuser.example.com_).
          HEADSCALE_DNS_CONFIG_BASE_DOMAIN: labs.andrewpjackson.com
          # HEADSCALE_OIDC_ISSUER: ""
          # HEADSCALE_OIDC_CLIENT_ID: ""
          # HEADSCALE_OIDC_CLIENT_SECRET: ""

        service:
          # -- Configures service settings for the chart.
          # @default -- See [values.yaml](./values.yaml)
          main:
            ports:
              http:
                port: 8080
              metrics:
                port: 9090
              grpc:
                enabled: false
                port: 50443

        ingress:
          # -- Enable and configure ingress settings for the chart under this key.
          # @default -- See [values.yaml](./values.yaml)
          main:
            enabled: false
            # hosts:
            #   - host: chart-example.local
            #     paths:
            #       - path: /
            # tls:
            #   - secretName: chart-example.local-tls
            #     hosts:
            #       - chart-example.local

        configMaps:
          acl:
            # -- Enables ACL policy
            enabled: false
            data:
              # -- ACL policy JSON [[ref]](https://tailscale.com/kb/1018/acls/)
              policy:

        persistence:
          # -- Configure persistence settings for the chart under this key.
          # @default -- See [values.yaml](./values.yaml)
          config:
            enabled: false
            mountPath: /etc/headscale
            retain: true
            # storageClass: ""
            # accessMode: ReadWriteOnce
            # size: 1Gi

        # -- Enable and configure postgresql database subchart under this key.
        #    For more options see [postgresql chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/postgresql)
        # @default -- See [values.yaml](./values.yaml)
        postgresql:
          enabled: false
          auth:
            database: headscale
            postgresPassword: changeme
          primary:
            persistence:
              enabled: false
              # storageClass: ""
              # size: 8Gi

        serviceMonitor:
          main:
            # -- Enables or disables the serviceMonitor.
            enabled: false
            # -- Configures the endpoints for the serviceMonitor.
            # @default -- See [values.yaml](./values.yaml)
            endpoints:
              - port: metrics
                scheme: http
                path: /metrics
                interval: 30s
                scrapeTimeout: 10s
  destination:
    namespace: headscale
    name: in-cluster
  info:
    - name: 'Github Repository:'
      value: >-
        https://github.com/gabe565/charts
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    managedNamespaceMetadata:
      labels:
        prometheus: enabled
    syncOptions:
    - Validate=false
    - CreateNamespace=true
    - Prune=true
    - RespectIgnoreDifferences=true
    - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 60s
        factor: 2
        maxDuration: 15m
