apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: democratic-csi-nfs
spec:
  project: core
  source:
    repoURL: https://github.com/democratic-csi/charts.git
    targetRevision: democratic-csi-0.14.3
    path: stable/democratic-csi
    helm:
      releaseName: democratic-csi-nfs
      values: |
        csiDriver:
          # should be globally unique for a given cluster
          name: "org.democratic-csi.nfs"

        # add note here about volume expansion requirements
        storageClasses:
        - name: freenas-nfs-csi
          defaultClass: false
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
          allowVolumeExpansion: true
          parameters:
            # for block-based storage can be ext3, ext4, xfs
            # for nfs should be nfs
            fsType: nfs
              
            # if true, volumes created from other snapshots will be
            # zfs send/received instead of zfs cloned
            # detachedVolumesFromSnapshots: "false"
            
            # if true, volumes created from other volumes will be
            # zfs send/received instead of zfs cloned
            # detachedVolumesFromVolumes: "false"

          mountOptions:
          - noatime
          - nfsvers=3
          secrets:
            provisioner-secret:
            controller-publish-secret:
            node-stage-secret:
            node-publish-secret:
            controller-expand-secret:

        # if your cluster supports snapshots you may enable below
        volumeSnapshotClasses: []
        #- name: freenas-nfs-csi
        #  parameters:
        #  # if true, snapshots will be created with zfs send/receive
        #  # detachedSnapshots: "false"
        #  secrets:
        #    snapshotter-secret:

        driver:
          existingConfigSecret: democratic-csi-nfs-driver-config
          config:
            # please see the most up-to-date example of the corresponding config here:
            # https://github.com/democratic-csi/democratic-csi/tree/master/examples
            # YOU MUST COPY THE DATA HERE INLINE!
            driver: freenas-nfs
            instance_id:
            httpConnection:
              protocol: http
              host: server address
              port: 80
              # use only 1 of apiKey or username/password
              # if both are present, apiKey is preferred
              # apiKey is only available starting in TrueNAS-12
              #apiKey:
              username: root
              password:
              allowInsecure: true
              # use apiVersion 2 for TrueNAS-12 and up (will work on 11.x in some scenarios as well)
              # leave unset for auto-detection
              #apiVersion: 2
            sshConnection:
              host: server address
              port: 22
              username: root
              # use either password or key
              password: ""
              privateKey: |
                -----BEGIN RSA PRIVATE KEY-----
                ...
                -----END RSA PRIVATE KEY-----
            zfs:
              # can be used to override defaults if necessary
              # the example below is useful for TrueNAS 12
              #cli:
              #  sudoEnabled: true
              #
              #  leave paths unset for auto-detection
              #  paths:
              #    zfs: /usr/local/sbin/zfs
              #    zpool: /usr/local/sbin/zpool
              #    sudo: /usr/local/bin/sudo
              #    chroot: /usr/sbin/chroot
              
              # can be used to set arbitrary values on the dataset/zvol
              # can use handlebars templates with the parameters from the storage class/CO
              #datasetProperties:
              #  "org.freenas:description": "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}/{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
              #  "org.freenas:test": "{{ parameters.foo }}"
              #  "org.freenas:test2": "some value"

              datasetParentName: tank/k8s/a/vols
              # do NOT make datasetParentName and detachedSnapshotsDatasetParentName overlap
              # they may be siblings, but neither should be nested in the other
              # do NOT comment this option out even if you don't plan to use snapshots, just leave it with dummy value
              detachedSnapshotsDatasetParentName: tank/k8s/a/snaps
              datasetEnableQuotas: true
              datasetEnableReservation: false
              datasetPermissionsMode: "0777"
              datasetPermissionsUser: 0
              datasetPermissionsGroup: 0
              #datasetPermissionsAcls:
              #- "-m everyone@:full_set:allow"
              #- "-m u:kube:full_set:allow"

            nfs:
              #shareCommentTemplate: "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}-{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
              shareHost: server address
              shareAlldirs: false
              shareAllowedHosts: []
              shareAllowedNetworks: []
              shareMaprootUser: root
              shareMaprootGroup: wheel
              shareMapallUser: ""
              shareMapallGroup: ""
  destination:
    namespace: democratic-csi
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - Validate=false
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=false
    - Prune=true
    - ServerSideApply=true
    retry:
      limit: 10
      backoff:
        duration: 20s
        factor: 2
        maxDuration: 15m
  ignoreDifferences:
    - group: storage.k8s.io
      kind: CSIDriver
      jqPathExpressions:
        - .spec.seLinuxMount
