---
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: sabnzbd-exporter
    app.kubernetes.io/instance: sabnzbd-exporter
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: sabnzbd-exporter
    app.kubernetes.io/instance: sabnzbd-exporter
  ports:
    - name: monitoring
      port: 9710
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: sabnzbd-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: sabnzbd-exporter
    app.kubernetes.io/instance: sabnzbd-exporter
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: sabnzbd-exporter
      app.kubernetes.io/instance: sabnzbd-exporter
  endpoints:
    - port: monitoring
      interval: 4m
      scrapeTimeout: 90s
      path: /metrics
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: sabnzbd-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: sabnzbd-exporter
    app.kubernetes.io/instance: sabnzbd-exporter
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: sabnzbd-exporter
      app.kubernetes.io/instance: sabnzbd-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sabnzbd-exporter
        app.kubernetes.io/instance: sabnzbd-exporter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "monitoring"
    spec:
      containers:
        - name: sabnzbd-exporter
          image: ghcr.io/onedr0p/exportarr:v1.5.3
          imagePullPolicy: IfNotPresent
          args:
            - sabnzbd
          env:
            - name: PORT
              value: "8080"
            - name: URL
              value: "http://sabnzbd.arr-stack.svc.cluster.local:7878"
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: sabnzbd-api-key-1password
                  key: password
          ports:
            - name: monitoring
              containerPort: 9710
          livenessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi