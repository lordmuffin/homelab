apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-server
  labels:
    app: n8n-server
  annotations:
    link.argocd.argoproj.io/external-link: https://n8n.labs.andrewpjackson.com
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: n8n-server
  template:
    metadata:
      labels:
        app: n8n-server
    spec:
      containers:
      - name: n8n
        image: n8nio/n8n:0.230.3
        env:
        - name: DB_POSTGRESDB_USER
          valueFrom: {secretKeyRef: {name: n8n-db-postgres-creds-1password, key: username}}
        - name: DB_POSTGRESDB_PASSWORD
          valueFrom: {secretKeyRef: {name: n8n-db-postgres-creds-1password, key: password}}
        - name: N8N_BASIC_AUTH_USER
          valueFrom: {secretKeyRef: {name: n8n-creds-1password, key: username}}
        - name: N8N_BASIC_AUTH_PASSWORD
          valueFrom: {secretKeyRef: {name: n8n-creds-1password, key: password}}
        - name: N8N_ENCRYPTION_KEY
          valueFrom: {secretKeyRef: {name: n8n-encryption-key-1password, key: password}}
        envFrom:
        - configMapRef:
            name: n8n-cm
        ports:
        - name: web
          containerPort: 5678
          protocol: TCP
        resources:
          requests:
            cpu: 150m
            memory: 512Mi
          limits:
            cpu: 550m
            memory: 768Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5678
          initialDelaySeconds: 60
        startupProbe:
          httpGet:
            path: /healthz
            port: 5678
          initialDelaySeconds: 120
        volumeMounts:
        - name: config-storage
          mountPath: /home/node/.n8n
      volumes:
      - name: config-storage
        persistentVolumeClaim:
          claimName: n8n-storage
