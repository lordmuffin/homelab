version: '3'
vars:
  CYAN: tput setaf 6
  RED: tput setaf 1
  YELLOW: tput setaf 3
  GREEN: tput setaf 2
  BLUE: tput setaf 1
  PURPLE: tput setaf 5
  BG_B: tput setab 0
  BOLD: tput bold
  RESET: tput sgr0
  CLEAR: tput reset
  INT_REGISTRY: registry.localhost
  PATH_ERROR: is not installed or correctly configured in PATH.
  # ENV: prod-lab
  # OP_TOKEN:
  # GH_USER:
  # GH_PASS:
  # APITOKEN:

silent: true

tasks:

  update-config:
    desc: Update kube config with available clusters.
    preconditions:
    - sh: 'which k3sup'
      msg: 'k3sup {{.PATH_ERROR}}'
    cmds:
      - rm ~/.kube/config 2> /dev/null
      - |
        export IP=192.168.10.30
        export USER=ubuntu
        export NAME=dev-lab
        export SSH_PRIV_KEY=~/.ssh/ubuntu.pem
        rm $SSH_PRIV_KEY 2> /dev/null
        op read --out-file $SSH_PRIV_KEY "op://HomeLab/onarfzninuoetwe2hh2ni7m52q/private key?ssh-format=openssh"

        k3sup install \
          --ip $IP \
          --user $USER \
          --skip-install \
          --ssh-key $SSH_PRIV_KEY \
          --merge \
          --local-path ~/.kube/config \
          --context $NAME
      - |
        export IP=192.168.11.30
        export USER=ubuntu
        export NAME=prod-lab
        export SSH_PRIV_KEY=~/.ssh/ubuntu.pem
        rm $SSH_PRIV_KEY 2> /dev/null
        op read --out-file $SSH_PRIV_KEY "op://HomeLab/onarfzninuoetwe2hh2ni7m52q/private key?ssh-format=openssh"

        k3sup install \
          --ip $IP \
          --user $USER \
          --skip-install \
          --ssh-key $SSH_PRIV_KEY \
          --merge \
          --local-path ~/.kube/config \
          --context $NAME
    ignore_error: true  

  pre-seed:
    desc: Pre Seeds the cluster with required things.
    preconditions:
    - sh: 'which kustomize'
      msg: 'kustomize {{.PATH_ERROR}}'
    - sh: 'which kubectl'
      msg: 'kubectl {{.PATH_ERROR}}'
    cmds:
      - task namespaces:create
      - task 1password:install
      - task secrets:democratic-csi-nfs-driver-config
      - task secrets:democratic-csi-driver-config
      - task argocd:install
    ignore_error: true

  # rm:
  #   dsc: Remove democratic csi config maps
  #   dir: config/democratic-csi
  #   preconditions:
  #   - sh: 'which kustomize'
  #     msg: 'kustomize {{.PATH_ERROR}}'
  #   - sh: 'which kubectl'
  #     msg: 'kubectl {{.PATH_ERROR}}'
  #   cmds:
  #   - kubectl config use-context {{.ENV}} --cluster={{.ENV}} --namespace=democratic-csi
  #   - kubectl delete configmap --namespace democratic-csi freenas-nfs-democratic-csi-config
  #   - echo ""
  #   ignore_error: true